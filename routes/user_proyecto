const express = require('express');
const jwt = require('jsonwebtoken');
const user = express.Router();
const db = require('../config/database');

user.post("/signin", async (req, res, next) => {

      const { user_name, user_mail, user_password, user_phone, user_address } = req.body;

      if (user_name && user_mail && user_password && user_phone && user_address) {
            let query = "INSERT INTO user_proyecto (user_name, user_mail, user_password, user_phone, user_address)";
            query  += ` VALUES ('${user_name}', '${user_mail}', '${user_password}', '${user_phone}', '${user_address}')`;
              const rows = await db.query(query);
              
              if(rows.affectedRows == 1) {
                  return res.status(201).json({ code: 201, message: "User inserted correctly"});
              }
              return res.status(500).json({ code: 500, message: "Error"});
            }
            return res.status(500).json({ code: 500, message: "Incomplete data"});
});

user.post("/login", async (req, res, next) => {
      const { user_mail, user_password, user_phone, user_address } = req.body;
      const query = `SELECT * FROM user_proyecto WHERE user_mail = '${user_mail}', user_password = '${user_password}', 
      user_phone = '${user_phone}' AND user_address = '${user_address}';`;
      const rows = await db.query(query);

      if (user_mail && user_password && user_phone && user_address) {
            if (rows.length == 1) {
                  const token = jwt.sign({
                        user_id: rows[0].user_id,
                        user_mail: rows[0].user_mail,
                        user_phone: rows[0].user_phone,
                        user_address: rows[0].user_address
                  }, "debugkey");
                  return res.status(200).json({ code: 200, message: token});
            }
            else {
                  return res.status(200).json({ code: 401, message: "User or password incorrect" });
            }
      }
      return res.status(500).json({ code: 500, message: "Incomplete data" });
});

user.get("/", async (req, res, next) => {
      const query = "SELECT * FROM user_proyecto";
      const rows = await db.query(query);

      return res.status(200).json({ code: 200, message: rows});

});

module.exports = user;